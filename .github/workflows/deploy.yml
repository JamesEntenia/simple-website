name: Deploy to ECS

on:
  push:
    branches:
      - main
env:
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER: james-ecs-cluster
  CONTAINER_NAME: simple-website
  ECS_SERVICE: ecs-service
  ECS_TD: .github/workflows/td.json

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install NVM and Node.js
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          . ~/.nvm/nvm.sh
          nvm install --lts

      - name: Install Node.js Dependencies
        run: npm install express mysql2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t jamesentenia/simple-website-docker-image:latest .

      - name: Push Docker Image
        run: docker push jamesentenia/simple-website-docker-image:latest

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TD }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: jamesentenia/simple-website-docker-image:latest
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false
